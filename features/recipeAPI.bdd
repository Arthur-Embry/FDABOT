Feature: Recipe and Nutrition API Service
  As a web application
  I want to serve recipe generation and nutrition information
  So that users can get detailed cooking instructions and nutritional data

  Background:
    Given the FastAPI server is running
    And the following API keys are configured:
      | Service      | Key Status |
      | Nutritionix  | Valid      |
      | Groq         | Valid      |

  Scenario: Serving Static HTML Pages
    When a GET request is made to the root endpoint "/"
    Then the server should respond with status code 200
    And return the contents of "index.html"
    
    When a GET request is made to "/signup"
    Then the server should respond with status code 200
    And return the contents of "signup.html"

    When a requested HTML file is not found
    Then the server should respond with status code 404
    And return an error message indicating the file is not found

  Scenario: Retrieving Nutrition Information
    Given the Nutritionix API is accessible
    When a POST request is made to "/nutrition/{food}"
    Then the response should include:
      | Field    | Type   |
      | calories | number |
      | protein  | number |
      | carbs    | number |

    When the food item is not found in Nutritionix database
    Then the response should include:
      | Field | Value      |
      | error | Not found  |

    When the Nutritionix API request fails
    Then the response should include:
      | Field | Value                        |
      | error | Failed to get nutrition info |

  Scenario Outline: Generating Recipe with Dietary Preferences
    Given the Groq API is accessible
    When a POST request is made to "/recipe/<recipe_name>"
    And a dietary filter "<dietary_filter>" is provided
    Then the response should be a JSON object containing:
      | Field         | Type             |
      | recipe_name   | string           |
      | dietary_type  | array of strings |
      | prep_time     | string           |
      | cook_time     | string           |
      | servings      | string           |
      | ingredients   | array of objects  |
      | instructions  | array of strings  |

    Examples:
      | recipe_name     | dietary_filter |
      | chocolate cake  | Gluten Free    |
      | pasta          | Vegetarian     |
      | chicken soup   |                |

  Scenario: Recipe Generation Error Handling
    Given the Groq API is inaccessible
    When a POST request is made to "/recipe/{recipe_name}"
    Then the response should include an error message
    And maintain the JSON format

  Scenario: Recipe Ingredient Structure
    When a recipe is successfully generated
    Then each ingredient in the ingredients array should have:
      | Field    | Type   | Description           |
      | quantity | number | Amount of ingredient  |
      | unit     | string | Measurement unit      |
      | name     | string | Ingredient name       |

  Scenario: API Authentication
    Given a request is made without valid API keys
    When accessing protected endpoints
    Then the external API calls should fail gracefully
    And return appropriate error messages
